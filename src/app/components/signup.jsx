'use client';

import React, { useState, useEffect } from 'react'
import signupStyles from '@/app/components/signup.module.css';
import Container from 'react-bootstrap/Container';
import Row from 'react-bootstrap/Row';
import Col from 'react-bootstrap/Col';
import Form from 'react-bootstrap/Form';
import Image from 'next/image';
import Button from 'react-bootstrap/Button';
import Slider from "react-slick";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import Link from 'next/link';

const signup = () => {

    const boardingOptions = [
        {
            id: 1,
            icon: `<svg width="32" height="31" viewBox="0 0 32 31" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M29.1413 25.7914L23.0731 19.7944L21.6348 18.3206C20.8115 19.5403 19.7341 20.6584 18.3975 21.5223L19.8865 22.9962L25.9039 28.9932C26.778 29.8572 28.2671 29.8572 29.1413 28.9932C29.6037 28.5358 29.807 27.9768 29.807 27.3669C29.807 26.8078 29.6037 26.198 29.1413 25.7914Z" fill="#57606F"/>
<path d="M30.1173 3.68372C30.3765 3.93783 30.4781 4.24276 30.4781 4.59852C30.4781 5.31003 29.914 5.86907 29.1923 5.86907H26.6207C26.2599 5.86907 25.9499 5.7166 25.6958 5.51331C25.4417 5.2592 25.335 4.95427 25.335 4.59852C25.335 4.3444 25.3858 4.14112 25.4874 3.93783H22.7634C22.4025 3.93783 22.0925 3.78536 21.8384 3.58207C21.5792 3.32796 21.4775 3.02304 21.4775 2.66728C21.4775 1.95577 22.0417 1.39673 22.7634 1.39673H26.6207C26.9816 1.39673 27.2916 1.54919 27.5457 1.75247C27.8049 1.95576 27.9065 2.31153 27.9065 2.66728C27.9065 2.92139 27.8557 3.12467 27.7541 3.32796H29.1923C29.5532 3.32796 29.914 3.42961 30.1173 3.68372Z" fill="#86DCFD"/>
<path d="M27.2916 14.1023C28.0133 14.1023 28.5775 14.6613 28.5775 15.3728C28.5775 16.0844 28.0133 16.6434 27.2916 16.6434C26.57 16.6434 26.0059 16.0844 26.0059 15.3728C26.0059 14.6613 26.57 14.1023 27.2916 14.1023Z" fill="#D7DEED"/>
<path d="M27.0835 22.3355L26.3618 23.047L23.1244 26.2488L22.4078 26.9095L20.4512 24.9783L21.1729 24.3176L24.4102 21.065L25.0811 20.4043L27.0835 22.3355Z" fill="#414A56"/>
<path d="M20.1972 5.0052C15.9841 0.837785 9.14343 0.837785 4.93028 5.0052C0.712043 9.17261 0.712043 15.932 4.93028 20.0994C8.57931 23.7077 14.185 24.1651 18.3473 21.5732C19.0131 21.1666 19.5823 20.6584 20.1464 20.0994C20.7105 19.5403 21.173 18.9813 21.5847 18.3714C24.3088 14.204 23.8463 8.61357 20.1972 5.0052Z" fill="#D8F2F1"/>
<path d="M18.0873 7.08875C15.0024 4.03943 10.0675 4.03943 6.98262 7.08875C3.89772 10.1381 3.89772 15.017 6.98262 18.0663C9.65587 20.7091 13.7166 21.014 16.7506 19.1336C17.2131 18.8287 17.6756 18.4729 18.0873 18.0663C18.4989 17.6598 18.8598 17.2532 19.1139 16.7958C21.1214 13.7465 20.7605 9.68068 18.0873 7.08875Z" fill="#EFF3F6"/>
<path d="M17.3654 10.6973H16.0287H9.14232H7.75488L12.583 7.29224L17.3654 10.6973Z" fill="#FF7979"/>
<path d="M16.0292 10.6973V16.6435H13.8184V14.7122C13.8184 14.4073 13.6659 14.1023 13.4576 13.8991C13.2492 13.6958 12.9443 13.5433 12.6343 13.5433C11.9685 13.5433 11.4501 14.0515 11.4501 14.7122V16.6435H9.1377V10.6973H16.0241H16.0292Z" fill="#FF7979"/>
<path d="M2.2516 21.7256C2.97328 21.7256 3.53742 22.2846 3.53742 22.9961C3.53742 23.7076 2.97328 24.2667 2.2516 24.2667C1.52993 24.2667 0.96582 23.7076 0.96582 22.9961C0.96582 22.2846 1.52993 21.7256 2.2516 21.7256Z" fill="#D7DEED"/>
<path d="M17.366 11.3072H16.0294C15.6686 11.3072 15.3636 11.0023 15.3636 10.6465C15.3636 10.4432 15.4653 10.2908 15.5669 10.1891L12.5328 8.05458L9.54959 10.1891C9.70206 10.2908 9.75795 10.494 9.75795 10.6973C9.75795 11.0531 9.44793 11.358 9.08709 11.358H7.75047C7.49128 11.358 7.23719 11.1547 7.13554 10.9006C7.0339 10.6465 7.13555 10.3416 7.39474 10.1891L12.2279 6.78403C12.4312 6.63156 12.7412 6.63156 13.0004 6.78403L17.7828 10.1891C17.986 10.3416 18.0928 10.6465 18.0419 10.9006C17.8895 11.1547 17.6303 11.3072 17.3711 11.3072H17.366Z" fill="black"/>
<path d="M16.0292 17.3042H13.8184C13.4576 17.3042 13.1476 16.9993 13.1476 16.6435V14.7122C13.1476 14.5598 13.0967 14.4581 12.9951 14.3565C12.8934 14.2549 12.7359 14.204 12.6343 14.204C12.3243 14.204 12.0701 14.4581 12.0701 14.7631V16.6943C12.0701 17.0501 11.7601 17.355 11.3993 17.355H9.08687C8.72603 17.355 8.41602 17.0501 8.41602 16.6943V10.6973C8.41602 10.3415 8.72603 10.0366 9.08687 10.0366H15.9783C16.3392 10.0366 16.6441 10.3415 16.6441 10.6973V16.6435C16.6441 16.9993 16.3849 17.3042 16.0292 17.3042ZM14.4334 16.0336H15.3583V11.358H9.75264V16.0336H10.7793V14.7122C10.7793 13.6958 11.6026 12.8826 12.6292 12.8826C13.1425 12.8826 13.5541 13.0859 13.915 13.3909C14.2758 13.7466 14.4283 14.204 14.4283 14.6614V16.0336H14.4334Z" fill="black"/>
<path d="M24.4103 21.7257C24.2578 21.7257 24.1002 21.6748 23.9478 21.5224L21.1729 18.778C20.9137 18.5239 20.9137 18.1173 21.1729 17.8632C21.4321 17.6091 21.8387 17.6091 22.0979 17.8632L24.8727 20.6076C25.1319 20.8617 25.1319 21.2683 24.8727 21.5224C24.7203 21.6748 24.5627 21.7257 24.4103 21.7257Z" fill="black"/>
<path d="M21.172 24.9273C21.0195 24.9273 20.862 24.8765 20.7095 24.724L17.9346 21.9797C17.6754 21.7255 17.6754 21.319 17.9346 21.0649C18.1938 20.8107 18.6055 20.8107 18.8596 21.0649L21.6345 23.8092C21.8937 24.0634 21.8937 24.4699 21.6345 24.724C21.482 24.8765 21.3245 24.9273 21.172 24.9273Z" fill="black"/>
<path d="M27.4944 30.2637C26.7219 30.2637 26.0053 29.9588 25.4361 29.3997L22.6612 26.7061C22.402 26.452 22.402 26.0455 22.6612 25.7914C22.9204 25.5372 23.332 25.5372 23.5862 25.7914L26.361 28.5357C27.0319 29.1964 28.0585 29.1964 28.7243 28.5357C29.0343 28.2308 29.1867 27.8242 29.1867 27.3668C29.1867 26.9094 29.0343 26.5029 28.7243 26.1979L25.9494 23.4535C25.6902 23.1994 25.6902 22.7928 25.9494 22.5387C26.2086 22.2846 26.6202 22.2846 26.8743 22.5387L29.6492 25.2831C30.2134 25.8422 30.5234 26.5537 30.5234 27.316C30.5234 28.0784 30.2134 28.8407 29.6492 29.3489C29.0343 30.0096 28.2618 30.2637 27.4893 30.2637H27.4944Z" fill="black"/>
<path d="M22.4074 27.5702C22.2549 27.5702 22.0974 27.5194 21.9449 27.3669L19.9933 25.4357C19.8917 25.3341 19.79 25.1308 19.79 24.9783C19.79 24.8259 19.8409 24.6734 19.9933 24.5209L24.6181 19.9469C24.8773 19.6928 25.289 19.6928 25.5431 19.9469L27.4947 21.8782C27.5963 21.9798 27.698 22.1831 27.698 22.3356C27.698 22.488 27.6472 22.6405 27.4947 22.793L22.8699 27.3669C22.7682 27.5194 22.5599 27.5702 22.4074 27.5702ZM21.3808 24.9783L22.4582 26.0456L26.2089 22.3356L25.1314 21.3191L21.3808 24.9783Z" fill="black"/>
<path d="M12.5328 23.8602C9.49874 23.8602 6.62221 22.6913 4.46227 20.5567C2.30233 18.4222 1.11816 15.5762 1.11816 12.5777C1.11816 9.57918 2.30233 6.73313 4.46227 4.5986C6.62221 2.46407 9.49874 1.29517 12.5328 1.29517C15.5669 1.29517 18.4434 2.46407 20.6034 4.5986C22.4533 6.4282 23.6374 8.86766 23.8916 11.4596C24.1507 14.0007 23.5307 16.5926 22.1433 18.7271C21.6808 19.3878 21.2183 19.9977 20.5983 20.6076C20.0342 21.1666 19.3633 21.7257 18.6467 22.1322C16.8476 23.2503 14.7385 23.8602 12.5277 23.8602H12.5328ZM12.5328 2.51489C9.80876 2.51489 7.28798 3.58217 5.38723 5.46259C3.48649 7.343 2.40398 9.88411 2.40398 12.5269C2.40398 15.1696 3.4814 17.7107 5.38723 19.5911C7.28798 21.4715 9.85958 22.5388 12.5328 22.5388C14.4844 22.5388 16.3394 21.9798 17.9809 20.9633C18.5959 20.5568 19.1651 20.0993 19.6784 19.5911C20.1917 19.0829 20.6542 18.5239 21.015 17.9648C23.5866 14.0515 23.0225 8.76602 19.6784 5.41176C17.8285 3.58216 15.2569 2.51489 12.5328 2.51489Z" fill="black"/>
<path d="M12.533 20.9124C10.2714 20.9124 8.11146 20.0484 6.52073 18.4729C4.92491 16.8975 4.05078 14.7629 4.05078 12.5268C4.05078 10.2906 4.92491 8.15605 6.52073 6.58057C8.11654 5.00508 10.2714 4.14111 12.533 4.14111C14.7946 4.14111 16.9545 5.00508 18.5503 6.58057C19.9378 7.95277 20.8119 9.73154 20.9644 11.6628C21.1727 13.5432 20.7103 15.4744 19.6277 17.0499C19.3177 17.5581 18.9061 18.0156 18.4944 18.4221C18.0828 18.8287 17.5694 19.2353 17.0561 19.5402C15.7703 20.5058 14.1796 20.9124 12.533 20.9124ZM12.533 5.41167C10.6322 5.41167 8.78232 6.174 7.44569 7.49538C6.10907 8.81675 5.33656 10.6463 5.33656 12.5268C5.33656 14.4072 6.10907 16.2368 7.44569 17.5581C8.78232 18.8795 10.6322 19.6419 12.533 19.6419C13.9204 19.6419 15.257 19.2353 16.3904 18.5238C16.8529 18.2697 17.2137 17.9139 17.6253 17.5581C17.9862 17.2024 18.2962 16.7958 18.6012 16.3892C20.4511 13.594 20.0394 9.83319 17.6253 7.49538C16.2887 6.174 14.4896 5.41167 12.5381 5.41167H12.533Z" fill="black"/>
<path d="M16.39 27.4686H3.53707C3.17623 27.4686 2.86621 27.1637 2.86621 26.8079C2.86621 26.4522 3.17623 26.1472 3.53707 26.1472H16.39C16.7508 26.1472 17.0608 26.4522 17.0608 26.8079C17.01 27.1637 16.7 27.4686 16.39 27.4686Z" fill="black"/>
<path d="M20.8628 29.349H9.29565C8.93481 29.349 8.62988 29.044 8.62988 28.6883C8.62988 28.3325 8.9399 28.0276 9.29565 28.0276H20.8628C21.2236 28.0276 21.5336 28.3325 21.5336 28.6883C21.5336 29.0948 21.2236 29.349 20.8628 29.349Z" fill="black"/>
<path d="M29.2427 6.47899H26.6711C26.1578 6.47899 25.6953 6.2757 25.2837 5.91995C24.9228 5.56419 24.7195 5.10679 24.7195 4.59857H22.768C22.2547 4.59857 21.7922 4.39528 21.3805 4.03952C21.0197 3.68377 20.8164 3.22638 20.8164 2.66733C20.8164 1.60007 21.6906 0.736084 22.768 0.736084H26.6254C27.1387 0.736084 27.6011 0.939376 28.0128 1.29513C28.3736 1.65089 28.577 2.15911 28.577 2.66733H29.2478C29.7611 2.66733 30.2236 2.87061 30.6352 3.22636C30.9961 3.58212 31.1994 4.09035 31.1994 4.59857C31.1485 5.61501 30.2744 6.47899 29.2478 6.47899H29.2427ZM22.8188 2.05746C22.458 2.05746 22.1479 2.36239 22.1479 2.71814C22.1479 2.87061 22.1988 3.02309 22.3512 3.17555C22.4529 3.2772 22.6612 3.37884 22.8137 3.37884H25.5378C25.7411 3.37884 26.0003 3.48049 26.1019 3.68378C26.2036 3.88706 26.2036 4.14117 26.1019 4.34446C26.0511 4.4461 26.0003 4.54775 26.0003 4.64939C26.0003 4.80186 26.0511 4.95432 26.2035 5.10679C26.3052 5.20843 26.5136 5.31007 26.666 5.31007H29.2376C29.5985 5.31007 29.9085 5.00515 29.9085 4.64939C29.9085 4.49693 29.8577 4.34446 29.7001 4.192C29.5985 4.09035 29.3901 3.9887 29.2376 3.9887H27.7994C27.591 3.9887 27.3369 3.88706 27.2352 3.68378C27.1336 3.48049 27.1336 3.22637 27.2352 3.02308C27.2861 2.92143 27.3369 2.81979 27.3369 2.71814C27.3369 2.56568 27.2861 2.41321 27.1336 2.26075C27.0319 2.1591 26.8236 2.05746 26.6711 2.05746H22.8137H22.8188Z" fill="black"/>
<path d="M27.2914 17.3041C26.214 17.3041 25.3398 16.4402 25.3398 15.3729C25.3398 14.3056 26.214 13.4417 27.2914 13.4417C28.3688 13.4417 29.243 14.3056 29.243 15.3729C29.243 16.4402 28.3688 17.3041 27.2914 17.3041ZM27.2914 14.763C26.9306 14.763 26.6205 15.068 26.6205 15.4237C26.6205 15.7795 26.9306 16.0844 27.2914 16.0844C27.6522 16.0844 27.9572 15.7795 27.9572 15.4237C27.9572 15.068 27.6472 14.763 27.2914 14.763Z" fill="black"/>
<path d="M2.25136 24.9274C1.17393 24.9274 0.299805 24.0635 0.299805 22.9962C0.299805 21.9289 1.17393 21.0649 2.25136 21.0649C3.32879 21.0649 4.20294 21.9289 4.20294 22.9962C4.20294 24.0635 3.27796 24.9274 2.25136 24.9274ZM2.25136 22.3863C1.89052 22.3863 1.58053 22.6912 1.58053 23.047C1.58053 23.4028 1.89052 23.7077 2.25136 23.7077C2.61219 23.7077 2.92221 23.4028 2.92221 23.047C2.87139 22.6404 2.56137 22.3863 2.25136 22.3863Z" fill="black"/>
</svg>`,
            title: 'Customer',
            text: 'Looking to buy, rent, or sell properties. Explore our extensive listings.'
        },
        {
            id: 2,
            icon: `<svg width="31" height="31" viewBox="0 0 31 31" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M20.5218 14.5867H9.93447H6.48926V23.866H23.967V14.5867H20.5218Z" fill="#FF7979"/>
<path d="M29.6079 2.88879V29.4436H27.1104V2.83943C27.1104 2.14841 27.6582 1.60547 28.3591 1.60547C28.7096 1.60547 29.0106 1.75354 29.2574 1.95098C29.5092 2.14841 29.6079 2.54328 29.6079 2.88879Z" fill="#D8F2F1"/>
<path d="M22.1161 3.4812H19.6236H10.2356H7.73807H3.39453V11.5266H7.73807H10.2356H19.6236H22.1161H27.1112V3.4812H22.1161Z" fill="#57606F"/>
<path d="M22.1156 3.4812V11.5266H19.623V9.05869V3.4812H22.1156Z" fill="#D8F2F1"/>
<path d="M21.8193 20.5592V20.9541H20.3682V18.9304H21.8193V19.3253H20.8667V19.7202H21.6663V20.115H20.8667V20.5592H21.8193Z" fill="black"/>
<path d="M20.1709 20.5592V20.9541H18.7197V18.9304H19.1689V20.5592H20.1709Z" fill="black"/>
<path d="M19.6233 9.05859H10.2354V11.5265H19.6233V9.05859Z" fill="#5B5A57"/>
<path d="M17.7228 18.9304L18.473 20.9541H17.9745L17.8264 20.5099H17.1749L17.0268 20.9541H16.5283L17.2786 18.9304H17.7277H17.7228ZM17.7722 20.1644L17.5204 19.424L17.2687 20.1644H17.7672H17.7722Z" fill="black"/>
<path d="M16.4742 20.115C16.5236 20.1643 16.5236 20.2631 16.5236 20.3618C16.5236 20.4605 16.5236 20.5592 16.4742 20.6579C16.4249 20.7566 16.3755 20.806 16.3261 20.8554C16.2768 20.9047 16.1781 20.9541 16.0744 20.9541C15.9708 20.9541 15.877 21.0034 15.7733 21.0034H15.5216C15.4229 21.0034 15.3735 20.9541 15.2699 20.9541C15.1662 20.9541 15.1218 20.9047 15.0724 20.8554C15.0231 20.806 14.9244 20.806 14.875 20.7566L15.0724 20.3618L15.1218 20.4111C15.1712 20.4605 15.2205 20.4605 15.2699 20.5098C15.3192 20.5592 15.4179 20.5592 15.4673 20.5592C15.566 20.5592 15.6154 20.6086 15.719 20.6086C15.8671 20.6086 15.9708 20.5592 15.9708 20.4605C15.9708 20.4276 15.9543 20.3947 15.9214 20.3618C15.9214 20.3618 15.872 20.3124 15.8227 20.3124C15.7733 20.3124 15.724 20.2631 15.6746 20.2631C15.6252 20.2631 15.5265 20.2137 15.4772 20.2137C15.3785 20.1643 15.2797 20.1643 15.2254 20.115C15.1761 20.0656 15.0774 20.0656 15.0774 20.0163C15.028 19.9669 14.9787 19.9175 14.9787 19.8682C14.9787 19.8188 14.9293 19.7201 14.9293 19.6708C14.9293 19.572 14.9293 19.4733 14.9787 19.3746C15.028 19.2759 15.0774 19.2265 15.1267 19.1772C15.1761 19.1278 15.2748 19.0785 15.3785 19.0291C15.4772 18.9797 15.5759 18.9797 15.6795 18.9797H15.877C15.9263 18.9797 16.025 19.0291 16.0744 19.0291C16.1238 19.0291 16.1731 19.0785 16.2718 19.0785C16.3212 19.1278 16.3706 19.1278 16.4199 19.1772L16.2225 19.572C16.2225 19.572 16.1731 19.572 16.1731 19.5227C16.1238 19.5227 16.0744 19.4733 16.025 19.4733C15.9757 19.4733 15.9263 19.424 15.877 19.424C15.8276 19.424 15.7783 19.3746 15.6795 19.3746C15.5315 19.3746 15.4278 19.424 15.4278 19.5227C15.4278 19.5556 15.4443 19.5885 15.4772 19.6214C15.5101 19.6543 15.543 19.6708 15.5759 19.6708C15.6252 19.6708 15.6746 19.7201 15.724 19.7201C15.7733 19.7201 15.8227 19.7695 15.9214 19.7695C16.0201 19.8188 16.1188 19.8188 16.1731 19.8682C16.2718 19.9175 16.3212 19.9175 16.3706 19.9669C16.4199 20.0163 16.4199 20.0656 16.4693 20.115H16.4742Z" fill="black"/>
<path d="M13.6804 20.2137L14.1296 20.9541H13.5817L13.1819 20.3125H12.8808V20.9541H12.4316V18.9304H13.33C13.4287 18.9304 13.5274 18.9304 13.5817 18.9798C13.631 19.0291 13.7298 19.0785 13.7791 19.1279C13.8285 19.1772 13.8778 19.2759 13.9272 19.3253C13.9766 19.424 13.9766 19.4734 13.9766 19.5721V19.7695C13.9766 19.8682 13.9272 19.8682 13.9272 19.9176C13.8778 19.9669 13.8778 20.0163 13.8285 20.0657C13.7791 20.1644 13.7298 20.1644 13.6804 20.2137ZM13.483 19.8189C13.5323 19.7695 13.5323 19.7202 13.5323 19.6214C13.5323 19.5227 13.5323 19.4734 13.483 19.424C13.4336 19.3746 13.3843 19.3746 13.3349 19.3746H12.9351V19.9176H13.3843C13.3843 19.9176 13.4336 19.8682 13.483 19.8189Z" fill="black"/>
<path d="M12.0809 19.5719C12.1303 19.72 12.1303 19.8187 12.1303 19.9667C12.1303 20.1148 12.0809 20.2135 12.0315 20.3616C11.9822 20.5097 11.9328 20.6084 11.8341 20.7071C11.7354 20.8058 11.6367 20.8552 11.533 20.9539C11.385 21.0033 11.2813 21.0526 11.1332 21.0526C10.9852 21.0526 10.8321 21.0033 10.7334 20.9539C10.5853 20.9046 10.4817 20.8058 10.4323 20.7071C10.3336 20.6084 10.2843 20.5097 10.2349 20.3616C10.1855 20.2135 10.1855 20.1148 10.1855 19.9667C10.1855 19.8187 10.2349 19.72 10.2843 19.5719C10.2843 19.5225 10.3336 19.5225 10.3336 19.4732C10.383 19.3744 10.4323 19.3251 10.4817 19.2264C10.5804 19.1277 10.6791 19.0783 10.7828 18.9796C10.9309 18.9302 11.0345 18.8809 11.1826 18.8809C11.3307 18.8809 11.4837 18.9302 11.5824 18.9796C11.7305 19.0289 11.8341 19.1277 11.8835 19.2264C11.9328 19.3251 12.0315 19.4732 12.0809 19.5719ZM11.6317 20.1642C11.6317 20.1148 11.6811 20.0161 11.6811 19.9174C11.6811 19.8187 11.6811 19.7693 11.6317 19.6706C11.6317 19.6212 11.5824 19.5225 11.533 19.4732C11.4837 19.4238 11.4343 19.3744 11.385 19.3251C11.3356 19.2757 11.2369 19.2757 11.1332 19.2757C11.0296 19.2757 10.9852 19.2757 10.8815 19.3251C10.8321 19.3744 10.7828 19.4238 10.7334 19.4732C10.6841 19.5225 10.6347 19.5719 10.6347 19.6706C10.6347 19.72 10.5853 19.8187 10.5853 19.9174C10.5853 20.0161 10.5853 20.0655 10.6347 20.1642C10.6347 20.2135 10.6841 20.3123 10.7334 20.3616C10.7828 20.411 10.8321 20.4603 10.8815 20.5097C10.9309 20.559 11.0296 20.559 11.1332 20.559C11.2369 20.559 11.2813 20.559 11.385 20.5097C11.4343 20.4603 11.4837 20.411 11.533 20.3616C11.5824 20.3123 11.5824 20.2629 11.6317 20.1642Z" fill="black"/>
<path d="M10.2348 9.05869V11.5266H7.7373V3.4812H10.2348V9.05869Z" fill="#D8F2F1"/>
<path d="M10.0326 18.9304V19.3253H9.0849V19.7695H9.83515V19.9669V20.1644H9.0849V20.9541H8.63574V18.9304H10.0326Z" fill="black"/>
<path d="M3.39402 11.5265V29.4435H0.896484V2.88874C0.896484 2.19773 1.44436 1.65479 2.14525 1.65479C2.49569 1.65479 2.79184 1.80286 3.04357 2.00029C3.2953 2.19773 3.39402 2.54324 3.39402 2.88874V11.5265Z" fill="#D8F2F1"/>
<path d="M3.39413 30.0359H0.896595C0.546151 30.0359 0.25 29.7397 0.25 29.3942V2.8888C0.25 1.85228 1.09896 1.01318 2.14536 1.01318C2.64388 1.01318 3.09304 1.21062 3.49284 1.55613C3.89265 1.90163 4.04072 2.39522 4.04072 2.8888V3.53046C4.04072 3.87597 3.73964 4.17212 3.39413 4.17212C3.04862 4.17212 2.74753 3.87597 2.74753 3.53046V2.8888C2.74753 2.74073 2.69817 2.59265 2.5501 2.44458C2.45138 2.34586 2.29837 2.24714 2.10094 2.24714C1.75049 2.24714 1.45434 2.54329 1.45434 2.8888V28.8019H2.70311V11.5265C2.70311 11.181 3.0042 10.8849 3.3497 10.8849C3.69521 10.8849 3.9963 11.181 3.9963 11.5265V29.4436C3.9963 29.7397 3.69521 30.0359 3.39906 30.0359H3.39413Z" fill="black"/>
<path d="M29.608 30.0359H27.1105C26.7601 30.0359 26.459 29.7398 26.459 29.3943V11.5266C26.459 11.181 26.7601 10.8849 27.1105 10.8849C27.461 10.8849 27.7571 11.181 27.7571 11.5266V28.802H28.9565V2.88884C28.9565 2.74077 28.9072 2.59269 28.7591 2.44462C28.6604 2.3459 28.458 2.24718 28.3099 2.24718C27.9595 2.24718 27.6584 2.54333 27.6584 2.88884V3.5305C27.6584 3.87601 27.3573 4.17216 27.0069 4.17216C26.6564 4.17216 26.459 3.82665 26.459 3.48114V2.83948C26.459 1.80296 27.3079 0.963867 28.3543 0.963867C28.8529 0.963867 29.302 1.1613 29.7018 1.50681C30.0523 1.85232 30.2497 2.3459 30.2497 2.83948V29.3943C30.2003 29.7398 29.8993 30.0359 29.5982 30.0359H29.608Z" fill="black"/>
<path d="M27.1113 12.119H3.39464C3.0442 12.119 2.74805 11.8228 2.74805 11.4773V3.48126C2.74805 3.13575 3.04913 2.8396 3.39464 2.8396H27.1113C27.4618 2.8396 27.7579 3.13575 27.7579 3.48126V11.5267C27.7086 11.8722 27.4075 12.119 27.1113 12.119ZM3.99188 10.885H26.4598V4.12292H3.99188V10.885Z" fill="black"/>
<path d="M22.1154 12.119C21.765 12.119 21.4639 11.8228 21.4639 11.4773V3.48126C21.4639 3.13575 21.765 2.8396 22.1154 2.8396C22.4658 2.8396 22.7669 3.13575 22.7669 3.48126V11.5267C22.7176 11.8722 22.4165 12.119 22.1154 12.119Z" fill="black"/>
<path d="M19.6232 12.119C19.2728 12.119 18.9717 11.8228 18.9717 11.4773V3.48126C18.9717 3.13575 19.2728 2.8396 19.6232 2.8396C19.9737 2.8396 20.2698 3.13575 20.2698 3.48126V11.5267C20.2204 11.8722 19.9194 12.119 19.6232 12.119Z" fill="black"/>
<path d="M7.73742 12.119C7.38697 12.119 7.09082 11.8228 7.09082 11.4773V3.48126C7.09082 3.13575 7.39191 2.8396 7.73742 2.8396C8.08292 2.8396 8.38401 3.13575 8.38401 3.48126V11.5267C8.38401 11.8722 8.08292 12.119 7.73742 12.119Z" fill="black"/>
<path d="M10.2355 12.119C9.88507 12.119 9.58398 11.8228 9.58398 11.4773V3.48126C9.58398 3.13575 9.88507 2.8396 10.2355 2.8396C10.586 2.8396 10.8821 3.13575 10.8821 3.48126V11.5267C10.8821 11.8722 10.581 12.119 10.2355 12.119Z" fill="black"/>
<path d="M19.6235 9.65099H10.2355C9.88507 9.65099 9.58398 9.35484 9.58398 9.00933C9.58398 8.66383 9.88507 8.36768 10.2355 8.36768H19.6235C19.9739 8.36768 20.2701 8.66383 20.2701 9.00933C20.2207 9.4042 19.9196 9.65099 19.6235 9.65099Z" fill="black"/>
<path d="M23.9662 24.4584H6.48844C6.138 24.4584 5.83691 24.1622 5.83691 23.8167V14.5867C5.83691 14.2412 6.138 13.9451 6.48844 13.9451H23.9662C24.3167 13.9451 24.6128 14.2412 24.6128 14.5867V23.8661C24.6128 24.2116 24.3117 24.4584 23.9662 24.4584ZM7.13997 23.2244H23.369V15.2284H7.13997V23.2244Z" fill="black"/>
<path d="M9.93376 17.6964C9.58331 17.6964 9.28223 17.4002 9.28223 17.0547V13.3528C9.28223 13.0073 9.58331 12.7112 9.93376 12.7112C10.2842 12.7112 10.5804 13.0073 10.5804 13.3528V17.0547C10.531 17.4002 10.2793 17.6964 9.93376 17.6964Z" fill="black"/>
<path d="M20.5216 17.6964C20.1711 17.6964 19.875 17.4002 19.875 17.0547V13.3528C19.875 13.0073 20.1761 12.7112 20.5216 12.7112C20.8671 12.7112 21.1731 13.0073 21.1731 13.3528V17.0547C21.1731 17.4002 20.872 17.6964 20.5216 17.6964Z" fill="black"/>
</svg>`,
            title: 'Property Agent',
            text: 'Real estate professional managing properties and serving clients.'
        },
    ]

    const sliderData = [
        {
            id: 1,
            title: 'Get Started with Ease',
            text: 'Follow simple steps to set up your account and explore properties tailored to your needs. Your dream home journey begins here.'
        },
        {
            id: 2,
            title: 'Connect & Secure Easily',
            text: 'Schedule visits, connect with agents, and move closer to sealing the deal with just a few clicks.'
        },
        {
            id: 3,
            title: 'Discover Your Perfect Match',
            text: 'Browse a wide range of listings and find homes that fit your lifestyle, location, and budget.'
        },
    ]

    const settings = {
        dots: false,
        autoplay: true,
        arrows: false,
        infinite: true,
        speed: 500,
        slidesToShow: 1,
        slidesToScroll: 1
    };

    const [showUserRole, setShowUserRole] = useState(true)
    const [showSignupForm, setShowSignupForm] = useState(false)
    const [showInfoFields, setShowInfoFields] = useState(false)
    const [showVerification, setShowVerfication] = useState(false)
    const [showSuccess, setShowSuccess] = useState(false)

    const formFields = [
        {
            id: 1,
            name: 'fname',
            placeholder: 'First name',
            type: 'text'
        },
        {
            id: 2,
            name: 'lname',
            placeholder: 'Last name',
            type: 'text'
        },
        {
            id: 3,
            name: 'email',
            placeholder: 'Enter Email',
            type: 'email'
        },
        {
            id: 4,
            name: 'password',
            placeholder: 'Password',
            type: 'password'
        },
        {
            id: 5,
            name: 'confirm-password',
            placeholder: 'Confirm Password',
            type: 'password'
        },
    ]

    const infoFields = [
        {
            id: 1,
            name: 'file-upload',
            label: 'Upload Profile Photo',
            placeholder: '',
            type: 'file'
        },
        {
            id: 2,
            name: 'fname',
            label: '',
            placeholder: 'ABC',
            type: 'text'
        },
        {
            id: 3,
            name: 'lname',
            label: '',
            placeholder: 'ABC',
            type: 'text'
        },
        {
            id: 4,
            name: 'email',
            label: '',
            placeholder: 'abc@gmail.com',
            type: 'email'
        },
        {
            id: 5,
            name: 'phone',
            label: '',
            placeholder: 'Enter Contact Number',
            type: 'text'
        },
        {
            id: 6,
            name: 'agency-name',
            label: 'Agency Name',
            placeholder: 'Prime American Living',
            type: 'text'
        },
        {
            id: 7,
            name: 'state',
            label: '',
            placeholder: '',
            type: 'text'
        },
        {
            id: 8,
            name: 'post-code',
            label: '',
            placeholder: 'Post Code',
            type: 'text'
        },
    ]

    const codeFields = [
        {
            id: 1,
            type: 'text',
        },
        {
            id: 2,
            type: 'text',
        },
        {
            id: 3,
            type: 'text',
        },
        {
            id: 4,
            type: 'text',
        },
        {
            id: 5,
            type: 'text',
        },
        {
            id: 6,
            type: 'text',
        }
    ]

    const [codeExpiry, setCodeExpiry] = useState(30);

    useEffect(() => {
        let intervalId = setInterval(() => {
            if (codeExpiry > 0) {
                setCodeExpiry(codeExpiry - 1);
            } else {
                clearInterval(intervalId);
            }
        }, 1000);

        return () => clearInterval(intervalId);
    }, [codeExpiry]);


    return (
        <section className={signupStyles.container}>
            <Container fluid className='ps-lg-4'>
                <Row>
                    <Col lg={6}>
                        {showUserRole &&
                            <div className={signupStyles.form_container}>
                                <div className='mb-3'>
                                    <h2 className={signupStyles.title}>Join Our Platform</h2>
                                    <p className={signupStyles.text}>Choose how you'd like to get started with our real estate platform</p>
                                </div>
                                <div className={`${signupStyles.radio_container} d-flex justify-content-between`}>
                                    {boardingOptions.map((item, index) =>
                                        <div key={index} className='radio-buttons1'>
                                            <Form.Check type="radio" aria-label="radio 1"
                                                label=
                                                {
                                                    <div className='d-flex align-items-center flex-column'>
                                                        <div className={signupStyles.icon_container}>
                                                            <Image
                                                                src={`data:image/svg+xml;utf8,${encodeURIComponent(item.icon)}`}
                                                                width={30}
                                                                height={30}
                                                                alt="form-icon"
                                                            />
                                                        </div>
                                                        <div>
                                                            <h5 className={signupStyles.label_title}>{item.title}</h5>
                                                            <span className={signupStyles.label_text}>{item.text}</span>
                                                        </div>
                                                    </div>
                                                }
                                                name='group' id={item.id} value={item.title} className={signupStyles.form_check} />
                                        </div>
                                    )}
                                </div>
                                <div>
                                    <Button variant='primary' onClick={() => { setShowUserRole(false); setShowSignupForm(true) }} className={signupStyles.form_btn}>Continue</Button>
                                </div>
                            </div>
                        }
                        {showSignupForm &&
                            <div className={signupStyles.form_container}>
                                <div className='mb-4'>
                                    <h2 className={`${signupStyles.title} mb-4`}>Sign up</h2>
                                    <p className={signupStyles.text}>Already have an  account? <Link href='/signin' className={signupStyles.signin_link}>Sign In*</Link></p>
                                </div>
                                <Form>
                                    <Row>
                                        {formFields.map((item, index) =>
                                            item.id === 3 ?
                                                <Col lg={12} key={index}>
                                                    <Form.Group className="mb-3" controlId={item.name}>
                                                        <Form.Control type={item.type} placeholder={item.placeholder} className={`${signupStyles.email_input} border-0 border-bottom`} />
                                                    </Form.Group>
                                                </Col>
                                                :
                                                <Col lg={6} key={index}>
                                                    <Form.Group className="mb-3" controlId={item.name}>
                                                        <Form.Control type={item.type} placeholder={item.placeholder} className={`${item.id === 4 || item.id === 5 ? signupStyles.password_input : signupStyles.form_input} border-0 border-bottom`} />
                                                    </Form.Group>
                                                </Col>
                                        )}
                                    </Row>
                                </Form>
                                <div className='py-4'>
                                    <Button variant='primary' onClick={() => { setShowSignupForm(false); setShowInfoFields(true) }} className={signupStyles.form_btn}>Sign Up</Button>
                                </div>
                                <div>
                                    <Form.Check className={signupStyles.terms_check} id='terms-check' aria-label="option 1" label='By clicking Create account, I agree that I have read and accepted the Terms of Use and Privacy Policy.' />
                                </div>
                            </div>
                        }
                        {showInfoFields &&
                            <div className={signupStyles.form_container}>
                                <div className='mb-4'>
                                    <h2 className={signupStyles.title}>Personal Info</h2>
                                </div>
                                <Form>
                                    <Row>
                                        {infoFields.map((item, index) =>
                                            item.id === 1 ?
                                                <Col lg={12} key={index}>
                                                    <Form.Group controlId="formFile" className="mb-3">
                                                        <Form.Label className={signupStyles.form_label}>{item.label}</Form.Label>
                                                        <Form.Control type={item.type} className={`${signupStyles.form_input} border-0 border-bottom`} />
                                                    </Form.Group>
                                                </Col>
                                                :
                                                item.id === 6 ?
                                                    <Col lg={12} key={index}>
                                                        <Form.Group className="mb-3" controlId={item.name}>
                                                            <Form.Label className={signupStyles.form_label}>{item.label}</Form.Label>
                                                            <Form.Control type={item.type} placeholder={item.placeholder} className={`${signupStyles.form_input} border-0 border-bottom`} />
                                                        </Form.Group>
                                                    </Col>
                                                    :
                                                    item.id === 7 ?
                                                        <Col lg={6} key={index}>
                                                            <Form.Group className="mb-3" controlId={item.name}>
                                                                <Form.Select aria-label="Default select example" className={`${signupStyles.form_input} border-0 border-bottom`}>
                                                                    <option>State</option>
                                                                    <option value="1">One</option>
                                                                    <option value="2">Two</option>
                                                                    <option value="3">Three</option>
                                                                </Form.Select>
                                                            </Form.Group>
                                                        </Col>
                                                        :
                                                        <Col lg={6} key={index}>
                                                            <Form.Group className="mb-3" controlId={item.name}>
                                                                <Form.Control type={item.type} placeholder={item.placeholder} className={`${item.id === 4 ? signupStyles.email_input : item.id === 5 ? signupStyles.phone_input : signupStyles.form_input} border-0 border-bottom`} />
                                                            </Form.Group>
                                                        </Col>
                                        )}
                                    </Row>
                                </Form>
                                <div className='py-4'>
                                    <Button variant='primary' onClick={() => { setShowInfoFields(false); setShowVerfication(true) }} className={signupStyles.form_btn}>Sign Up</Button>
                                </div>
                            </div>
                        }
                        {showVerification &&
                            <div className={signupStyles.form_container}>
                                <div className='mb-4'>
                                    <h2 className={`${signupStyles.title} mb-4`}>Verification</h2>
                                    <p className={signupStyles.text}>Enter 6 digit code that you received on your email.</p>
                                </div>
                                <Form className='mb-3'>
                                    <Row>
                                        {codeFields.map((item, index) =>
                                            <Col lg={2} md={2} xs={2} key={index}>
                                                <Form.Control type={item.type} className={signupStyles.code_input} />
                                            </Col>
                                        )}
                                    </Row>
                                </Form>
                                <div className='py-3 text-center'>
                                    <p className={signupStyles.code_text}>
                                        00:{codeExpiry < 10 ? '0' + codeExpiry : codeExpiry}
                                    </p>
                                </div>
                                <div className='pb-4'>
                                    <Button variant='primary' onClick={() => { setShowVerfication(false); setShowSuccess(true) }} className={signupStyles.form_btn}>Verify</Button>
                                </div>
                                <div className='text-center'>
                                    <span className={signupStyles.resend_text}>If you didn’t receive a code!
                                        <a href="#" className={signupStyles.resend_link} onClick={() => setCodeExpiry(30)}>Resend</a>
                                    </span>
                                </div>
                            </div>
                        }
                        {showSuccess &&
                            <div className={signupStyles.form_container}>
                                <div className='mb-4 text-center'>
                                    <svg width="165" height="165" viewBox="0 0 165 165" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path fillRule="evenodd" clipRule="evenodd" d="M120.937 53.4869C123.229 55.7696 123.237 59.4782 120.954 61.7701L71.6015 111.323C69.3188 113.615 65.6104 113.623 63.3184 111.34L45.3198 93.4163C43.0277 91.1337 43.02 87.4251 45.3026 85.133C47.5852 82.8409 51.2937 82.8332 53.5858 85.1158L67.4345 98.907L112.654 53.5037C114.937 51.2117 118.645 51.2042 120.937 53.4869Z" fill="#4178BA" />
                                        <path fillRule="evenodd" clipRule="evenodd" d="M82.5004 17.0556C51.4532 17.0556 25.4068 38.735 18.7208 67.7774L18.7208 67.7775C17.6324 72.5048 17.0561 77.4322 17.0561 82.4999C17.0561 118.616 46.3839 147.944 82.5004 147.944C118.617 147.944 147.945 118.616 147.945 82.4999C147.945 46.3835 118.617 17.0556 82.5004 17.0556ZM7.3051 65.1493C15.1873 30.911 45.8718 5.34131 82.5004 5.34131C125.087 5.34131 159.659 39.9138 159.659 82.4999C159.659 125.086 125.087 159.659 82.5004 159.659C39.9143 159.659 5.3418 125.086 5.3418 82.4999C5.3418 76.5412 6.01976 70.7322 7.3051 65.1493Z" fill="#4178BA" fillOpacity="0.4" />
                                    </svg>
                                </div>
                                <div className='mb-4 text-center'>
                                    <h2 className={signupStyles.title}>Successfully</h2>
                                </div>
                                <div className='text-center'>
                                    <p className={signupStyles.text}>Your Account has been created successfully</p>
                                </div>
                                <div className='py-4'>
                                    <Link href='/signin'>
                                        <Button variant='primary' className={signupStyles.form_btn}>Sign In</Button>
                                    </Link>
                                </div>
                            </div>
                        }
                    </Col>
                    <Col lg={6} className='pe-0'>
                        <div className="slider-container">
                            <Slider {...settings}>
                                {sliderData.map((item, index) =>
                                    <div key={index} className={`position-relative ${item.id === 1 ? signupStyles.slider_img1 : item.id === 2 ? signupStyles.slider_img2 : item.id === 3 ? signupStyles.slider_img3 : ''}`}>
                                        <div className={`${signupStyles.slider_text_container} position-absolute bottom-0 text-center`}>
                                            <h5 className={signupStyles.slider_title}>{item.title}</h5>
                                            <span>{item.text}</span>
                                        </div>
                                    </div>
                                )}
                            </Slider>
                        </div>
                    </Col>
                </Row>
            </Container>
        </section>
    )
}

export default signup